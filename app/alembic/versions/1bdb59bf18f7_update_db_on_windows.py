"""Update DB on Windows

Revision ID: 1bdb59bf18f7
Revises: 
Create Date: 2021-09-06 13:56:36.365005

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '1bdb59bf18f7'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('firstname', sa.String(), nullable=True),
    sa.Column('lastname', sa.String(), nullable=True),
    sa.Column('password', sa.String(), nullable=False),
    sa.Column('scope', sa.String(), nullable=True),
    sa.Column('created', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_email'), 'user', ['email'], unique=True)
    op.create_table('octcsv',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('seamid', sa.Integer(), nullable=False),
    sa.Column('linenumber', sa.String(), nullable=True),
    sa.Column('type', sa.String(), nullable=True),
    sa.Column('filename', sa.String(), nullable=True),
    sa.Column('datetime', sa.DateTime(), nullable=True),
    sa.Column('grouporder', sa.Integer(), nullable=True),
    sa.Column('userid', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['userid'], ['user.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('settings',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('userid', sa.Integer(), nullable=True),
    sa.Column('frequency', sa.Float(), nullable=True),
    sa.Column('points_per_line', sa.Integer(), nullable=True),
    sa.Column('points_per_interval', sa.Integer(), nullable=True),
    sa.Column('line_length', sa.Float(), nullable=True),
    sa.Column('extend_points', sa.Integer(), nullable=True),
    sa.Column('reference_points', sa.Integer(), nullable=True),
    sa.Column('extend_reference_points', sa.Integer(), nullable=True),
    sa.Column('lag_xy', sa.Float(), nullable=True),
    sa.Column('x_start', sa.Float(), nullable=True),
    sa.Column('x_end', sa.Float(), nullable=True),
    sa.Column('y_start', sa.Float(), nullable=True),
    sa.Column('y_end', sa.Float(), nullable=True),
    sa.Column('x_ref_coordinate', sa.Float(), nullable=True),
    sa.Column('y_ref_coordinate', sa.Float(), nullable=True),
    sa.Column('jump_speed', sa.Float(), nullable=True),
    sa.Column('seam_length', sa.Float(), nullable=True),
    sa.Column('speed', sa.Float(), nullable=True),
    sa.Column('step_size_oct_tester', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['userid'], ['user.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('csvdata',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('octcsv_id', sa.Integer(), nullable=True),
    sa.Column('data', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.ForeignKeyConstraint(['octcsv_id'], ['octcsv.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('laserpar',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('octcsv_id', sa.Integer(), nullable=True),
    sa.Column('userid', sa.Integer(), nullable=True),
    sa.Column('seam_id', sa.Integer(), nullable=True),
    sa.Column('seam_length', sa.Float(), nullable=True),
    sa.Column('speed', sa.Float(), nullable=True),
    sa.Column('step_size_oct_tester', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['octcsv_id'], ['octcsv.id'], ),
    sa.ForeignKeyConstraint(['userid'], ['user.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('octpar',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('octcsv_id', sa.Integer(), nullable=True),
    sa.Column('laser_id', sa.Integer(), nullable=True),
    sa.Column('userid', sa.Integer(), nullable=True),
    sa.Column('frequency', sa.Float(), nullable=True),
    sa.Column('points_per_line', sa.Integer(), nullable=True),
    sa.Column('points_per_interval', sa.Integer(), nullable=True),
    sa.Column('line_length', sa.Float(), nullable=True),
    sa.Column('extend_points', sa.Integer(), nullable=True),
    sa.Column('reference_points', sa.Integer(), nullable=True),
    sa.Column('extend_reference_points', sa.Integer(), nullable=True),
    sa.Column('lag_xy', sa.Float(), nullable=True),
    sa.Column('x_start', sa.Float(), nullable=True),
    sa.Column('x_end', sa.Float(), nullable=True),
    sa.Column('y_start', sa.Float(), nullable=True),
    sa.Column('y_end', sa.Float(), nullable=True),
    sa.Column('x_ref_coordinate', sa.Float(), nullable=True),
    sa.Column('y_ref_coordinate', sa.Float(), nullable=True),
    sa.Column('jump_speed', sa.Float(), nullable=True),
    sa.Column('scantype', sa.String(), nullable=True),
    sa.Column('grouporder', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['laser_id'], ['laserpar.id'], ),
    sa.ForeignKeyConstraint(['octcsv_id'], ['octcsv.id'], ),
    sa.ForeignKeyConstraint(['userid'], ['user.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('octpar')
    op.drop_table('laserpar')
    op.drop_table('csvdata')
    op.drop_table('settings')
    op.drop_table('octcsv')
    op.drop_index(op.f('ix_user_email'), table_name='user')
    op.drop_table('user')
    # ### end Alembic commands ###
